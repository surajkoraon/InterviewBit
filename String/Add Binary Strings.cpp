string Solution::addBinary(string A, string B) {    string s;    int a=A.size();    int b=B.size();    //int c=max(a,b);    a--;    b--;    int temp=0;    while(a>=0 && b>=0)    {        int x;        int y;        x=A[a]-'0';        y=B[b]-'0';        //cout<<"x="<<x<<" and y="<<y<<" and temp="<<temp<<endl;        if(x==y && x==0)        {            if(temp)            {                s='1'+s;                temp=0;            }            else                s='0'+s;        }        else if(x==y && x==1)        {            if(temp)            {                s='1'+s;            }            else                s='0'+s;            temp=1;        }        else        {            if(temp)            {                s='0'+s;                temp=1;            }            else                s='1'+s;        }        a--;        b--;        //cout<<"-"<<s<<endl;    }    if(a>=0)    {        while(a>=0)        {            //cout<<"temp="<<temp<<endl;           if(temp)            {                if(A[a]=='0')                {                    s='1'+s;                    temp=0;                }                else                {                    s='0'+s;                    temp=1;                }            }             else            {                s=A[a]+s;            }            a--;            //cout<<"-"<<s<<endl;        }    }    if(b>=0)    {        while(b>=0)        {            //cout<<"temp="<<temp<<endl;           if(temp)            {                if(B[b]=='0')                {                    s='1'+s;                    temp=0;                }                else                {                    s='0'+s;                    temp=1;                }            }             else            {                s=B[b]+s;            }            b--;            //cout<<"-"<<s<<endl;        }    }    if(temp)        s='1'+s;    return s;}